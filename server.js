const express = require("express");
const axios = require("axios");

const app = express();
app.use(express.json());

/** üëá ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°) */
const myName = "testLock";

/** üëá ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡∏∑‡πà‡∏≠ subdomain ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ping */
const bots = [
  { name: "Bot1 for my discord", subdomain: "bot1-for-my-discord" },
  { name: "testLock", subdomain: "testlock" },
  { name: "Bot2 to my customer", subdomain: "bot2-to-my-customer" },
];

/** üëá Deploy hook URL ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏≠‡∏ó (‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏õ‡πá‡∏ô key) */
const deployHooks = {
  "Bot1 for my discord": "https://api.render.com/deploy/srv-d21tgtre5dus73937jdg?key=7I6ioDTWORs",
  "testLock": "https://api.render.com/deploy/srv-d27rbfvdiees73d09q1g?key=jw_eY2z_BHM",
  "Bot2 to my customer": "https://api.render.com/deploy/srv-d26f236r433s739964dg?key=eqJmBZwzZMQ"
};

/** üëá ‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö */
const missedReplies = {};

/** ‚úÖ endpoint ping */
app.post("/ping", (req, res) => {
  const { from } = req.body;
  console.log(`üì® ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ping ‡∏à‡∏≤‡∏Å ${from}`);
  res.send({ ok: true });
});

/** ‚úÖ health check */
app.get("/", (_, res) => {
  res.status(200).send(`‚úÖ ${myName} ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà!`);
});

/** üîÅ ping ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡∏ó‡∏∏‡∏Å 1 ‡∏ô‡∏≤‡∏ó‡∏µ */
setInterval(async () => {
  for (const bot of bots) {
    if (bot.name === myName) continue;

    const url = `https://${bot.subdomain}.onrender.com/ping`;

    try {
      const res = await axios.post(url, { from: myName }, { timeout: 5000 });
      if (res.data.ok) {
        console.log(`‚úÖ ${bot.name} ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö`);
        missedReplies[bot.name] = 0;
      }
    } catch (err) {
      console.log(`‚ùå ${bot.name} ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö`);
      missedReplies[bot.name] = (missedReplies[bot.name] || 0) + 1;
    }
  }

  // Redeploy ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡πÑ‡∏´‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  for (const [botName, missed] of Object.entries(missedReplies)) {
    if (missed >= 5 && shouldRedeploy(botName)) {
      console.log(`üö® ${botName} ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö ${missed} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚Üí redeploy ‡πÇ‡∏î‡∏¢ ${myName}`);
      await redeployBot(botName);
      missedReplies[botName] = 0;
    }
  }
}, 60_000);

/** ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£ redeploy ‡∏ö‡∏≠‡∏ó‡∏ô‡∏µ‡πâ‡∏°‡∏±‡πâ‡∏¢ (‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°) */
function shouldRedeploy(targetBotName) {
  return myName < targetBotName;
}

/** ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Deploy Hook */
async function redeployBot(botName) {
  const url = deployHooks[botName];
  if (!url) {
    console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö deploy hook ‡∏Ç‡∏≠‡∏á ${botName}`);
    return;
  }
  try {
    await axios.post(url);
    console.log(`üîÅ Redeploy ${botName} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
  } catch (err) {
    console.error(`‚ùå Redeploy ${botName} ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:`, err.message);
  }
}

/** ‚ñ∂Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏° server */
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üåê ${myName} ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï ${PORT}`);
});
